# docker-compose.yml
version: "3"
services:
  express:
    image: node:20
    container_name: express
    tty: true  
    working_dir: "/usr/src/app"
    user: ${DOCKER_USER:-1000}:${DOCKER_USER:-1000}
    env_file:
      - .env
    depends_on:
      - db
    ports:
      - "$PORT:$PORT"
    volumes:
      - ${PWD}/:/usr/src/app
    command: |-
      bash -c "
        set -eux
        yarn
        npx prisma generate
        yarn dev
      "
    networks:
      - node-network

  frontend:
    image: node:20
    container_name: frontend
    working_dir: "/app"
    user: ${DOCKER_USER:-1000}:${DOCKER_USER:-1000}
    env_file:
      - .env
    depends_on:
      - db
      - express
    ports:
      - "3000:3000"
    volumes:
      - ${PWD}/frontend:/app
    command: |-
      bash -c "
        set -eux
        yarn
        yarn dev --host -p 3000
      "
    networks:
      - node-network

  db:
    image: mysql:5.7
    container_name: mysql
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - ${DATABASE_PORT}:3306
    environment:
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USERNAME}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_ROOT_PASSWORD: Admin123
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - node-network

  phpmyadmin:
    depends_on:
      - db
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - '9000:80'
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: Admin123
    networks:
      - node-network

volumes:
  mysql-data:


networks:
  node-network:
    driver: bridge
